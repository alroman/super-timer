{"version":3,"sources":["webpack:///./src/images/logo.png","webpack:///./src/pages/index.js"],"names":["module","exports","pageStyles","color","padding","fontFamily","StyledTimer","styled","div","StyledApp","StartIcon","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","points","PauseIcon","x1","y1","x2","y2","StopIcon","x","y","IndexPage","useState","time","setTime","delay","setDelay","useInterval","style","className","src","superLogo","alt","Date","toISOString","substr","onClick"],"mappings":"8EAAAA,EAAOC,QAAU,IAA0B,oD,kCCA3C,yFAQMC,EAAa,CACfC,MAAO,UACPC,QAAS,OACTC,WAAY,4CAGVC,EAAcC,IAAOC,IAAV,qEAAGD,CAAH,yDAKXE,EAAYF,IAAOC,IAAV,mEAAGD,CAAH,yNAyBTG,EAAY,kBACd,uBACIC,MAAM,6BACNC,MAAM,MACNC,OAAO,MACPC,QAAQ,YACRC,KAAK,OACLC,OAAO,UACPC,YAAY,MACZC,cAAc,QACdC,eAAe,SAEf,0BAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1B,2BAASC,OAAO,4BAIlBC,EAAY,kBACd,uBACIb,MAAM,6BACNC,MAAM,MACNC,OAAO,MACPC,QAAQ,YACRC,KAAK,OACLC,OAAO,UACPC,YAAY,MACZC,cAAc,QACdC,eAAe,SAEf,0BAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1B,wBAAMG,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,MACjC,wBAAMH,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,QAInCC,EAAW,kBACb,uBACIlB,MAAM,6BACNC,MAAM,MACNC,OAAO,MACPC,QAAQ,YACRC,KAAK,OACLC,OAAO,UACPC,YAAY,MACZC,cAAc,QACdC,eAAe,SAEf,0BAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC1B,wBAAMQ,EAAE,IAAIC,EAAE,IAAInB,MAAM,IAAIC,OAAO,QAoD5BmB,UAhDG,WAAO,IAAD,EACIC,mBAAS,GAA1BC,EADa,KACPC,EADO,OAEMF,mBAAS,MAA5BG,EAFa,KAENC,EAFM,KAQpB,OAJAC,KAAY,WACRH,EAAQD,EAAO,KAChBE,GAGC,wBAAMG,MAAOrC,GACT,4CACA,gBAACO,EAAD,KACI,uBAAK+B,UAAU,QACX,uBAAKC,IAAKC,IAAWC,IAAI,mBAE7B,gBAACrC,EAAD,KArEZ,IAAIsC,KAAe,IAqEiBV,GArEXW,cAAcC,OAAO,GAAI,IAsEtC,uBAAKN,UAAU,cACD,IAATN,GAAwB,OAAVE,EACX,0BAAQW,QAAS,kBAAMV,EAAS,OAC5B,gBAAC3B,EAAD,OAGJ,2BACe,OAAV0B,EACG,0BAAQW,QAAS,kBAAMV,EAAS,OAC5B,gBAAC3B,EAAD,OAGJ,0BAAQqC,QAAS,kBAAMV,EAAS,QAC5B,gBAACb,EAAD,OAGR,0BACIuB,QAAS,WACLZ,EAAQ,GACRE,EAAS,QAGb,gBAACR,EAAD","file":"component---src-pages-index-js-fc0d92cd9544f9fd0871.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/logo-66db6c4f2ff6b9427313b67c965f98d9.png\";","import * as React from 'react'\nimport styled from 'styled-components'\nimport { useState } from 'react'\nimport useInterval from '@use-it/interval'\nimport Starter from './dial'\nimport superLogo from '../images/logo.png'\n\n// styles\nconst pageStyles = {\n    color: '#232129',\n    padding: '96px',\n    fontFamily: '-apple-system, Roboto, sans-serif, serif',\n}\n\nconst StyledTimer = styled.div`\n    font-family: 'Alfa Slab One', cursive;\n    font-size: 8rem;\n`\n\nconst StyledApp = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    justify-content: center;\n    align-items: center;\n\n    .logo img {\n        max-width: 200px;\n        margin-bottom: 40px;\n    }\n    .transports {\n        margin-top: 40px;\n    }\n    button {\n        margin: 0;\n        padding: 0;\n        background: transparent;\n        border: 0;\n    }\n`\n\nconst printTime = (seconds) =>\n    new Date(seconds * 1000).toISOString().substr(14, 5)\n\nconst StartIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"100\"\n        height=\"100\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"#000000\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n    >\n        <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n        <polygon points=\"10 8 16 12 10 16 10 8\"></polygon>\n    </svg>\n)\n\nconst PauseIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"100\"\n        height=\"100\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"#000000\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n    >\n        <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n        <line x1=\"10\" y1=\"15\" x2=\"10\" y2=\"9\"></line>\n        <line x1=\"14\" y1=\"15\" x2=\"14\" y2=\"9\"></line>\n    </svg>\n)\n\nconst StopIcon = () => (\n    <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"100\"\n        height=\"100\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"#000000\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n    >\n        <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\n        <rect x=\"9\" y=\"9\" width=\"6\" height=\"6\"></rect>\n    </svg>\n)\n\nconst IndexPage = () => {\n    const [time, setTime] = useState(0)\n    const [delay, setDelay] = useState(null)\n\n    useInterval(() => {\n        setTime(time + 1)\n    }, delay)\n\n    return (\n        <main style={pageStyles}>\n            <title>Super Timer</title>\n            <StyledApp>\n                <div className=\"logo\">\n                    <img src={superLogo} alt=\"Superman Logo\" />\n                </div>\n                <StyledTimer>{printTime(time)}</StyledTimer>\n                <div className=\"transports\">\n                    {time === 0 && delay === null ? (\n                        <button onClick={() => setDelay(1000)}>\n                            <StartIcon />\n                        </button>\n                    ) : (\n                        <div>\n                            {delay === null ? (\n                                <button onClick={() => setDelay(1000)}>\n                                    <StartIcon />\n                                </button>\n                            ) : (\n                                <button onClick={() => setDelay(null)}>\n                                    <PauseIcon />\n                                </button>\n                            )}\n                            <button\n                                onClick={() => {\n                                    setTime(0)\n                                    setDelay(null)\n                                }}\n                            >\n                                <StopIcon />\n                            </button>\n                        </div>\n                    )}\n                </div>\n            </StyledApp>\n        </main>\n    )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}